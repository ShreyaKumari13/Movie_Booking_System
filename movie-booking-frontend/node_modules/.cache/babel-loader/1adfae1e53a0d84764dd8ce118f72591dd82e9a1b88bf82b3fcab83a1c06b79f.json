{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\moviebooking\\\\movie-booking-frontend\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\n// // src/components/MovieList.js\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { getMoviesByCategory, createBooking } from '../services/api';\n\n// const MovieList = () => {\n//   const { category } = useParams();\n//   const [movies, setMovies] = useState([]);\n\n//   useEffect(() => {\n//     getMoviesByCategory(category).then((response) => setMovies(response.data));\n//   }, [category]);\n\n//   const handleBooking = (movieId) => {\n//     const userId = 1; // Replace with actual user ID from session\n//     createBooking(userId, movieId).then(() => alert('Booking successful!'));\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h2 className=\"text-2xl font-bold mb-4\">{category === 'upcoming' ? 'Upcoming Movies' : 'This Week Movies'}</h2>\n//       {movies.map((movie) => (\n//         <div key={movie.id} className=\"bg-white p-4 rounded-lg shadow-lg mb-4\">\n//           <h3 className=\"text-xl font-semibold\">{movie.title}</h3>\n//           <p>Release Date: {movie.releaseDate}</p>\n//           <p>Available Seats: {movie.availableSeats}</p>\n//           {category === 'this_week' && (\n//             <button onClick={() => handleBooking(movie.id)} className=\"btn mt-2\">Book</button>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default MovieList;\n// src/components/MovieList.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesByCategory, createBooking } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getMoviesByCategory(category).then(response => setMovies(response.data));\n  }, [category]);\n  const handleBooking = (movieId, availableSeats) => {\n    if (availableSeats === 0) {\n      alert('Seats are full for this movie.'); // Show prompt if no seats are available\n      return;\n    }\n    const userId = 1; // Replace with actual user ID from session\n    createBooking(userId, movieId).then(() => {\n      alert('Booking successful!');\n      // Optionally update the UI to reflect the reduced seat count\n      setMovies(prevMovies => prevMovies.map(movie => movie.id === movieId ? {\n        ...movie,\n        availableSeats: movie.availableSeats - 1\n      } : movie));\n    }).catch(error => {\n      console.error(\"Error booking movie:\", error);\n      alert(\"Booking failed. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: category === 'upcoming' ? 'Upcoming Movies' : 'This Week Movies'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-lg mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold\",\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movie.releaseDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Available Seats: \", movie.availableSeats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), category === 'this_week' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBooking(movie.id, movie.availableSeats),\n        className: \"btn mt-2 bg-blue-500 text-white p-2 rounded\",\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"CJlHCFa62M/wVstkFfLFtE/Oag4=\", false, function () {\n  return [useParams];\n});\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getMoviesByCategory","createBooking","jsxDEV","_jsxDEV","MovieList","_s","category","movies","setMovies","then","response","data","handleBooking","movieId","availableSeats","alert","userId","prevMovies","map","movie","id","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","releaseDate","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/moviebooking/movie-booking-frontend/src/components/MovieList.js"],"sourcesContent":["// // src/components/MovieList.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { getMoviesByCategory, createBooking } from '../services/api';\r\n\r\n// const MovieList = () => {\r\n//   const { category } = useParams();\r\n//   const [movies, setMovies] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     getMoviesByCategory(category).then((response) => setMovies(response.data));\r\n//   }, [category]);\r\n\r\n//   const handleBooking = (movieId) => {\r\n//     const userId = 1; // Replace with actual user ID from session\r\n//     createBooking(userId, movieId).then(() => alert('Booking successful!'));\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-4\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">{category === 'upcoming' ? 'Upcoming Movies' : 'This Week Movies'}</h2>\r\n//       {movies.map((movie) => (\r\n//         <div key={movie.id} className=\"bg-white p-4 rounded-lg shadow-lg mb-4\">\r\n//           <h3 className=\"text-xl font-semibold\">{movie.title}</h3>\r\n//           <p>Release Date: {movie.releaseDate}</p>\r\n//           <p>Available Seats: {movie.availableSeats}</p>\r\n//           {category === 'this_week' && (\r\n//             <button onClick={() => handleBooking(movie.id)} className=\"btn mt-2\">Book</button>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MovieList;\r\n// src/components/MovieList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMoviesByCategory, createBooking } from '../services/api';\r\n\r\nconst MovieList = () => {\r\n  const { category } = useParams();\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getMoviesByCategory(category).then((response) => setMovies(response.data));\r\n  }, [category]);\r\n\r\n  const handleBooking = (movieId, availableSeats) => {\r\n    if (availableSeats === 0) {\r\n      alert('Seats are full for this movie.'); // Show prompt if no seats are available\r\n      return;\r\n    }\r\n\r\n    const userId = 1; // Replace with actual user ID from session\r\n    createBooking(userId, movieId)\r\n      .then(() => {\r\n        alert('Booking successful!');\r\n        // Optionally update the UI to reflect the reduced seat count\r\n        setMovies((prevMovies) =>\r\n          prevMovies.map((movie) =>\r\n            movie.id === movieId ? { ...movie, availableSeats: movie.availableSeats - 1 } : movie\r\n          )\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error booking movie:\", error);\r\n        alert(\"Booking failed. Please try again.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">\r\n        {category === 'upcoming' ? 'Upcoming Movies' : 'This Week Movies'}\r\n      </h2>\r\n      <h3>Dashboard</h3>\r\n      {movies.map((movie) => (\r\n        <div key={movie.id} className=\"bg-white p-4 rounded-lg shadow-lg mb-4\">\r\n          <h3 className=\"text-xl font-semibold\">{movie.title}</h3>\r\n          <p>Release Date: {movie.releaseDate}</p>\r\n          <p>Available Seats: {movie.availableSeats}</p>\r\n          {category === 'this_week' && (\r\n            <button\r\n              onClick={() => handleBooking(movie.id, movie.availableSeats)}\r\n              className=\"btn mt-2 bg-blue-500 text-white p-2 rounded\"\r\n            >\r\n              Book\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}