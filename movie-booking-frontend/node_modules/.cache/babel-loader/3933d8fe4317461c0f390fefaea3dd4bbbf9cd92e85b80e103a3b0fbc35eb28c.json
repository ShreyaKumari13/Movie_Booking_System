{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { getMoviesByCategory, createBooking } from '../services/api';\n\n// const MovieList = () => {\n//   const { category } = useParams();\n//   const [movies, setMovies] = useState([]);\n\n//   useEffect(() => {\n//     getMoviesByCategory(category).then((response) => setMovies(response.data));\n//   }, [category]);\n\n//   const handleBooking = (movieId, availableSeats) => {\n//     if (availableSeats === 0) {\n//       alert('Seats are full for this movie.'); // Show prompt if no seats are available\n//       return;\n//     }\n\n//     const userId = 1; // Replace with actual user ID from session\n//     createBooking(userId, movieId)\n//       .then(() => {\n//         alert('Booking successful!');\n//         // Optionally update the UI to reflect the reduced seat count\n//         setMovies((prevMovies) =>\n//           prevMovies.map((movie) =>\n//             movie.id === movieId ? { ...movie, availableSeats: movie.availableSeats - 1 } : movie\n//           )\n//         );\n//       })\n//       .catch((error) => {\n//         console.error(\"Error booking movie:\", error);\n//         alert(\"Booking failed. Please try again.\");\n//       });\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h2 className=\"text-2xl font-bold mb-4\">\n//         {category === 'upcoming' ? 'Upcoming Movies' : 'This Week Movies'}\n//       </h2>\n//       <h3>Dashboard</h3>\n//       {movies.map((movie) => (\n//         <div key={movie.id} className=\"bg-white p-4 rounded-lg shadow-lg mb-4\">\n//           <h3 className=\"text-xl font-semibold\">{movie.title}</h3>\n//           <p>Release Date: {movie.releaseDate}</p>\n//           <p>Available Seats: {movie.availableSeats}</p>\n//           {category === 'this_week' && (\n//             <button\n//               onClick={() => handleBooking(movie.id, movie.availableSeats)}\n//               className=\"btn mt-2 bg-blue-500 text-white p-2 rounded\"\n//             >\n//               Book\n//             </button>\n//           )}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default MovieList;","map":{"version":3,"names":[],"sources":["C:/Users/Lenovo/Downloads/moviebooking/movie-booking-frontend/src/components/MovieList.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import { getMoviesByCategory, createBooking } from '../services/api';\r\n\r\n// const MovieList = () => {\r\n//   const { category } = useParams();\r\n//   const [movies, setMovies] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     getMoviesByCategory(category).then((response) => setMovies(response.data));\r\n//   }, [category]);\r\n\r\n//   const handleBooking = (movieId, availableSeats) => {\r\n//     if (availableSeats === 0) {\r\n//       alert('Seats are full for this movie.'); // Show prompt if no seats are available\r\n//       return;\r\n//     }\r\n\r\n//     const userId = 1; // Replace with actual user ID from session\r\n//     createBooking(userId, movieId)\r\n//       .then(() => {\r\n//         alert('Booking successful!');\r\n//         // Optionally update the UI to reflect the reduced seat count\r\n//         setMovies((prevMovies) =>\r\n//           prevMovies.map((movie) =>\r\n//             movie.id === movieId ? { ...movie, availableSeats: movie.availableSeats - 1 } : movie\r\n//           )\r\n//         );\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error booking movie:\", error);\r\n//         alert(\"Booking failed. Please try again.\");\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-4\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">\r\n//         {category === 'upcoming' ? 'Upcoming Movies' : 'This Week Movies'}\r\n//       </h2>\r\n//       <h3>Dashboard</h3>\r\n//       {movies.map((movie) => (\r\n//         <div key={movie.id} className=\"bg-white p-4 rounded-lg shadow-lg mb-4\">\r\n//           <h3 className=\"text-xl font-semibold\">{movie.title}</h3>\r\n//           <p>Release Date: {movie.releaseDate}</p>\r\n//           <p>Available Seats: {movie.availableSeats}</p>\r\n//           {category === 'this_week' && (\r\n//             <button\r\n//               onClick={() => handleBooking(movie.id, movie.availableSeats)}\r\n//               className=\"btn mt-2 bg-blue-500 text-white p-2 rounded\"\r\n//             >\r\n//               Book\r\n//             </button>\r\n//           )}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MovieList;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}