{"ast":null,"code":"// // src/components/BookingDetails.js\n// import React, { useEffect, useState } from \"react\";\n// import { getUserBookings, cancelBooking } from \"../services/api\";\n\n// const BookingDetails = () => {\n//   const [bookings, setBookings] = useState([]);\n\n//   // Load user's bookings\n//   useEffect(() => {\n//     const userId = 1; // Replace with logged-in user ID or retrieve from session\n//     getUserBookings(userId).then((response) => setBookings(response.data));\n//   }, []);\n\n//   const handleCancel = (bookingId) => {\n//     if (window.confirm(\"Do you really want to cancel this booking?\")) {\n//       cancelBooking(bookingId)\n//         .then(() => {\n//           alert(\"Booking cancelled successfully\");\n//           // Update the bookings list to reflect the cancellation\n//           setBookings((prevBookings) =>\n//             prevBookings.map((booking) =>\n//               booking.id === bookingId ? { ...booking, isCancelled: true } : booking\n//             )\n//           );\n//         })\n//         .catch((error) => {\n//           console.error(\"Error cancelling booking:\", error.response?.data || error.message);\n//           alert(\"Failed to cancel booking. Please try again.\");\n//         });\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Your Bookings</h2>\n//       {bookings.length > 0 ? (\n//         bookings.map((booking) => (\n//           <div\n//             key={booking.id}\n//             className=\"bg-white p-4 rounded-lg shadow-lg mb-4\"\n//           >\n//             <p>Movie: {booking.movie.title}</p>\n//             <p>Booking Time: {new Date(booking.bookingTime).toLocaleString()}</p>\n//             {booking.isCancelled ? (\n//               <p className=\"text-red-500\">This booking has been cancelled</p>\n//             ) : (\n//               <button\n//                 onClick={() => handleCancel(booking.id)}\n//                 className=\"btn mt-2 bg-red-500 text-white p-2 rounded\"\n//               >\n//                 Cancel Booking\n//               </button>\n//             )}\n//           </div>\n//         ))\n//       ) : (\n//         <p>No bookings found.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BookingDetails;","map":{"version":3,"names":[],"sources":["C:/Users/Lenovo/Downloads/moviebooking/movie-booking-frontend/src/components/BookingDetails.js"],"sourcesContent":["// // src/components/BookingDetails.js\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { getUserBookings, cancelBooking } from \"../services/api\";\r\n\r\n// const BookingDetails = () => {\r\n//   const [bookings, setBookings] = useState([]);\r\n\r\n//   // Load user's bookings\r\n//   useEffect(() => {\r\n//     const userId = 1; // Replace with logged-in user ID or retrieve from session\r\n//     getUserBookings(userId).then((response) => setBookings(response.data));\r\n//   }, []);\r\n\r\n//   const handleCancel = (bookingId) => {\r\n//     if (window.confirm(\"Do you really want to cancel this booking?\")) {\r\n//       cancelBooking(bookingId)\r\n//         .then(() => {\r\n//           alert(\"Booking cancelled successfully\");\r\n//           // Update the bookings list to reflect the cancellation\r\n//           setBookings((prevBookings) =>\r\n//             prevBookings.map((booking) =>\r\n//               booking.id === bookingId ? { ...booking, isCancelled: true } : booking\r\n//             )\r\n//           );\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error cancelling booking:\", error.response?.data || error.message);\r\n//           alert(\"Failed to cancel booking. Please try again.\");\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-4\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">Your Bookings</h2>\r\n//       {bookings.length > 0 ? (\r\n//         bookings.map((booking) => (\r\n//           <div\r\n//             key={booking.id}\r\n//             className=\"bg-white p-4 rounded-lg shadow-lg mb-4\"\r\n//           >\r\n//             <p>Movie: {booking.movie.title}</p>\r\n//             <p>Booking Time: {new Date(booking.bookingTime).toLocaleString()}</p>\r\n//             {booking.isCancelled ? (\r\n//               <p className=\"text-red-500\">This booking has been cancelled</p>\r\n//             ) : (\r\n//               <button\r\n//                 onClick={() => handleCancel(booking.id)}\r\n//                 className=\"btn mt-2 bg-red-500 text-white p-2 rounded\"\r\n//               >\r\n//                 Cancel Booking\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         ))\r\n//       ) : (\r\n//         <p>No bookings found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingDetails;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}