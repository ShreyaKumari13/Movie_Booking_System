{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\moviebooking\\\\movie-booking-frontend\\\\src\\\\components\\\\BookingDetails.js\",\n  _s = $RefreshSig$();\n// // src/components/BookingDetails.js\n// import React, { useEffect, useState } from \"react\";\n// import { getUserBookings, cancelBooking } from \"../services/api\";\n\n// const BookingDetails = () => {\n//   const [bookings, setBookings] = useState([]);\n\n//   // Load user's bookings\n//   useEffect(() => {\n//     const userId = 1; // Replace with logged-in user ID or retrieve from session\n//     getUserBookings(userId).then((response) => setBookings(response.data));\n//   }, []);\n\n//   const handleCancel = (bookingId) => {\n//     if (window.confirm(\"Do you really want to cancel this booking?\")) {\n//       cancelBooking(bookingId)\n//         .then(() => {\n//           alert(\"Booking cancelled successfully\");\n//           // Update the bookings list to reflect the cancellation\n//           setBookings((prevBookings) =>\n//             prevBookings.map((booking) =>\n//               booking.id === bookingId ? { ...booking, isCancelled: true } : booking\n//             )\n//           );\n//         })\n//         .catch((error) => {\n//           console.error(\"Error cancelling booking:\", error.response?.data || error.message);\n//           alert(\"Failed to cancel booking. Please try again.\");\n//         });\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h2 className=\"text-2xl font-bold mb-4\">Your Bookings</h2>\n//       <button\n//         onClick={() => navigate('/movies')} // Replace with actual dashboard route\n//         className=\"bg-green-500 text-white font-semibold py-2 px-4 rounded shadow hover:bg-green-600 transition duration-200 mb-4\"\n//       >\n//         Dashboard\n//       </button>\n//       {bookings.length > 0 ? (\n//         bookings.map((booking) => (\n//           <div\n//             key={booking.id}\n//             className=\"bg-white p-4 rounded-lg shadow-lg mb-4\"\n//           >\n//             <p>Movie: {booking.movie.title}</p>\n//             <p>Booking Time: {new Date(booking.bookingTime).toLocaleString()}</p>\n//             {booking.isCancelled ? (\n//               <p className=\"text-red-500\">This booking has been cancelled</p>\n//             ) : (\n//               <button\n//                 onClick={() => handleCancel(booking.id)}\n//                 className=\"btn mt-2 bg-red-500 text-white p-2 rounded\"\n//               >\n//                 Cancel Booking\n//               </button>\n//             )}\n//           </div>\n//         ))\n//       ) : (\n//         <p>No bookings found.</p>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default BookingDetails;\n// src/components/BookingDetails.js\n// src/components/BookingDetails.js\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { getUserBookings, cancelBooking } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingDetails = () => {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const navigate = useNavigate(); // Initialize navigate function\n\n  // Load user's bookings\n  useEffect(() => {\n    const userId = 1; // Replace with logged-in user ID or retrieve from session\n    getUserBookings(userId).then(response => setBookings(response.data));\n  }, []);\n  const handleCancel = bookingId => {\n    if (window.confirm(\"Do you really want to cancel this booking?\")) {\n      cancelBooking(bookingId).then(() => {\n        alert(\"Booking cancelled successfully\");\n        // Update the bookings list to reflect the cancellation\n        setBookings(prevBookings => prevBookings.map(booking => booking.id === bookingId ? {\n          ...booking,\n          isCancelled: true\n        } : booking));\n      }).catch(error => {\n        var _error$response;\n        console.error(\"Error cancelling booking:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert(\"Failed to cancel booking. Please try again.\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Your Bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/movies') // Navigate to movies\n      ,\n      className: \"bg-green-500 text-white font-semibold py-2 px-4 rounded shadow hover:bg-green-600 transition duration-200 mb-4\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), bookings.length > 0 ? bookings.map(booking => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-lg mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Movie: \", booking.movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Booking Time: \", new Date(booking.bookingTime).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), booking.isCancelled ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500\",\n        children: \"This booking has been cancelled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCancel(booking.id),\n        className: \"btn mt-2 bg-red-500 text-white p-2 rounded\",\n        children: \"Cancel Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this)]\n    }, booking.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bookings found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingDetails, \"mr2KvoxWBfNIx+6N4E4ZsC3z30Q=\", false, function () {\n  return [useNavigate];\n});\n_c = BookingDetails;\nexport default BookingDetails;\nvar _c;\n$RefreshReg$(_c, \"BookingDetails\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getUserBookings","cancelBooking","jsxDEV","_jsxDEV","BookingDetails","_s","bookings","setBookings","navigate","userId","then","response","data","handleCancel","bookingId","window","confirm","alert","prevBookings","map","booking","id","isCancelled","catch","error","_error$response","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","movie","title","Date","bookingTime","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/moviebooking/movie-booking-frontend/src/components/BookingDetails.js"],"sourcesContent":["// // src/components/BookingDetails.js\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { getUserBookings, cancelBooking } from \"../services/api\";\r\n\r\n// const BookingDetails = () => {\r\n//   const [bookings, setBookings] = useState([]);\r\n\r\n//   // Load user's bookings\r\n//   useEffect(() => {\r\n//     const userId = 1; // Replace with logged-in user ID or retrieve from session\r\n//     getUserBookings(userId).then((response) => setBookings(response.data));\r\n//   }, []);\r\n\r\n//   const handleCancel = (bookingId) => {\r\n//     if (window.confirm(\"Do you really want to cancel this booking?\")) {\r\n//       cancelBooking(bookingId)\r\n//         .then(() => {\r\n//           alert(\"Booking cancelled successfully\");\r\n//           // Update the bookings list to reflect the cancellation\r\n//           setBookings((prevBookings) =>\r\n//             prevBookings.map((booking) =>\r\n//               booking.id === bookingId ? { ...booking, isCancelled: true } : booking\r\n//             )\r\n//           );\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error(\"Error cancelling booking:\", error.response?.data || error.message);\r\n//           alert(\"Failed to cancel booking. Please try again.\");\r\n//         });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-4\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">Your Bookings</h2>\r\n//       <button\r\n//         onClick={() => navigate('/movies')} // Replace with actual dashboard route\r\n//         className=\"bg-green-500 text-white font-semibold py-2 px-4 rounded shadow hover:bg-green-600 transition duration-200 mb-4\"\r\n//       >\r\n//         Dashboard\r\n//       </button>\r\n//       {bookings.length > 0 ? (\r\n//         bookings.map((booking) => (\r\n//           <div\r\n//             key={booking.id}\r\n//             className=\"bg-white p-4 rounded-lg shadow-lg mb-4\"\r\n//           >\r\n//             <p>Movie: {booking.movie.title}</p>\r\n//             <p>Booking Time: {new Date(booking.bookingTime).toLocaleString()}</p>\r\n//             {booking.isCancelled ? (\r\n//               <p className=\"text-red-500\">This booking has been cancelled</p>\r\n//             ) : (\r\n//               <button\r\n//                 onClick={() => handleCancel(booking.id)}\r\n//                 className=\"btn mt-2 bg-red-500 text-white p-2 rounded\"\r\n//               >\r\n//                 Cancel Booking\r\n//               </button>\r\n//             )}\r\n//           </div>\r\n//         ))\r\n//       ) : (\r\n//         <p>No bookings found.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BookingDetails;\r\n// src/components/BookingDetails.js\r\n// src/components/BookingDetails.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\nimport { getUserBookings, cancelBooking } from \"../services/api\";\r\n\r\nconst BookingDetails = () => {\r\n  const [bookings, setBookings] = useState([]);\r\n  const navigate = useNavigate(); // Initialize navigate function\r\n\r\n  // Load user's bookings\r\n  useEffect(() => {\r\n    const userId = 1; // Replace with logged-in user ID or retrieve from session\r\n    getUserBookings(userId).then((response) => setBookings(response.data));\r\n  }, []);\r\n\r\n  const handleCancel = (bookingId) => {\r\n    if (window.confirm(\"Do you really want to cancel this booking?\")) {\r\n      cancelBooking(bookingId)\r\n        .then(() => {\r\n          alert(\"Booking cancelled successfully\");\r\n          // Update the bookings list to reflect the cancellation\r\n          setBookings((prevBookings) =>\r\n            prevBookings.map((booking) =>\r\n              booking.id === bookingId ? { ...booking, isCancelled: true } : booking\r\n            )\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error cancelling booking:\", error.response?.data || error.message);\r\n          alert(\"Failed to cancel booking. Please try again.\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Your Bookings</h2>\r\n      <button\r\n        onClick={() => navigate('/movies')} // Navigate to movies\r\n        className=\"bg-green-500 text-white font-semibold py-2 px-4 rounded shadow hover:bg-green-600 transition duration-200 mb-4\"\r\n      >\r\n        Dashboard\r\n      </button>\r\n      {bookings.length > 0 ? (\r\n        bookings.map((booking) => (\r\n          <div\r\n            key={booking.id}\r\n            className=\"bg-white p-4 rounded-lg shadow-lg mb-4\"\r\n          >\r\n            <p>Movie: {booking.movie.title}</p>\r\n            <p>Booking Time: {new Date(booking.bookingTime).toLocaleString()}</p>\r\n            {booking.isCancelled ? (\r\n              <p className=\"text-red-500\">This booking has been cancelled</p>\r\n            ) : (\r\n              <button\r\n                onClick={() => handleCancel(booking.id)}\r\n                className=\"btn mt-2 bg-red-500 text-white p-2 rounded\"\r\n              >\r\n                Cancel Booking\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No bookings found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingDetails;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}